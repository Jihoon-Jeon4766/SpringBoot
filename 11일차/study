# `Board 를 API 서버로 만들기`

```java
package com.example.project.api;

import com.example.project.entity.Board;
import com.example.project.repository.BoardRepository;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;
import java.util.List;

@Slf4j
@RestController
public class BoardAPIController {

    //의존성 주입
    @Autowired
    private BoardRepository boardRepository;

    // GET
    @GetMapping("/api/boards")
    public List<Board> readBoard(){
        return boardRepository.findAll(); // JSON 데이터 반환..
    }

}
```

# `설명`

- 이 컨트롤러 메서드는 **전체 게시글 리스트를 JSON 형태로 반환**합니다.
- Spring Boot에서는 `@RestController`나 `@ResponseBody`가 설정되어 있으면 객체를 자동으로 JSON으로 변환해서 클라이언트에게 응답합니다.

http://localhost:8080/api/boards

# 결과물

Body

- Pretty
- [x]  [
- [x]  {

**"id":** 1,

**"title":** "TESTDATA1",

**"content":** "11111"

},

- [x]  {

**"id":** 2,

**"title":** "TESTDATA2",

**"content":** "22222"

},

- [x]  {

**"id":** 3,

**"title":** "TESTDATA3",

**"content":** "33333"

}

]

`@RequestBody` 어노테이션

Request 시  바디영역 (본문)에 실어 보내는 데이터를  create board 메서드 매개변수로 받아 올 수 있습니다.

JSON 데이터를 컨트롤러 해서 받아와서 사용 가능.
